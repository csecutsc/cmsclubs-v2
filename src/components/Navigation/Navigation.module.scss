@use '../../utils/styles/mixins';
@use '../../utils/styles/units';

.container {
  display: flex;
}

.logo {
  align-items: center;
  margin-right: auto;
  display: flex;
}

.asset {
  margin-right: map-get(units.$spacing, element);
  width: 1.8rem;
  height: auto;
}

.items {
  list-style-type: none;
  align-items: center;
  display: flex;
  padding: 0;
  margin: 0;
}

.item {
  margin-left: map-get(units.$spacing, element);
}

.link {
  @include mixins.transition(background-color color);
  padding: map-get(units.$spacing, element) * 1.5
    map-get(units.$spacing, component);
  border-radius: 0.5rem;
  text-decoration: none;
  display: block;

  &:hover,
  &:focus {
    background-color: var(--c-text-b);
    color: var(--c-text-h);
  }

  &:active {
    background-color: var(--c-text-b-h);
    color: var(--c-text-a);
  }

  &--active {
    background-color: var(--c-primary-b);
    color: var(--c-primary-h);

    &:hover,
    &:focus {
      background-color: var(--c-primary-b-h);
      color: var(--c-primary-a);
    }

    &:active {
      background-color: var(--c-primary-b-a);
      color: var(--c-primary-a);
    }
  }
}

.button {
  @include mixins.transition(background-color color);
  padding: map-get(units.$spacing, element) * 1.3;
  background-color: transparent;
  border-radius: 999px;
  color: var(--c-text);
  position: relative;
  cursor: pointer;
  display: flex;
  border: none;

  &:hover,
  &:focus {
    background-color: var(--c-primary-b);
    color: var(--c-primary-h);
  }

  &:active {
    background-color: var(--c-primary-b-h);
    color: var(--c-primary-a);
  }
}

.icon {
  height: map-get(units.$spacing, component);
  width: map-get(units.$spacing, component);
  display: block;

  &--abs {
    position: absolute;
    margin: auto;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
  &--hide {
    opacity: 0;
  }
}
